#!/bin/bash

set -o errexit -o nounset -o pipefail

base_dir=$(cd "$(dirname "${BASH_SOURCE[0]}")/.." && pwd)
topdir=$(git -C "${base_dir}" rev-parse --show-toplevel)
source "${topdir}/src/test-helpers/linter.sh"

run_in_docker() {
	docker run \
		--mount=type=tmpfs,destination=/var/vcap/store \
		--mount=type=tmpfs,destination=/var/vcap/data \
		--volume=/var/run/docker.sock:/var/run/docker.sock \
		--volume="${topdir}:/workspace" \
		--workdir=/workspace/src/mysql-metrics \
		--network=host \
		--interactive --tty \
		cloudfoundry/cf-mysql-ci "$@"
}

ginkgo=(
	go run github.com/onsi/ginkgo/v2/ginkgo
	-p
	-r
	-race
	--fail-on-pending
	--randomize-all
	--randomize-suites
)

if [[ -n ${UNIT:-} ]]; then
	ginkgo+=("--skip-package=integration_test")
elif [[ -n ${INTEGRATION:-} ]]; then
	ginkgo+=("integration_test")
fi

if [[ $(uname) == Darwin ]]; then
	ginkgo=("run_in_docker" "${ginkgo[@]}")
else
	# Needed for disk metrics; may need to create manually if permission denied
	mkdir -p /var/vcap/store
	mkdir -p /var/vcap/data
fi

echo "Running: ${ginkgo[*]}"
cd "${base_dir}"
"${ginkgo[@]}"
cd -
